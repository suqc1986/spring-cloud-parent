spring.application.name=eureka-client-article-consumer
server.port=8082
# 采用IP注册
eureka.instance.preferIpAddress=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
eureka.client.serviceUrl.defaultZone=http://root:123qwe@localhost:8761/eureka/,http://root:123qwe@localhost:8762/eureka/


eureka.client.healthcheck.enabled=true
# 默认 30 秒
eureka.instance.lease-renewal-interval-in-seconds=5
# 默认 90 秒
eureka.instance.lease-expiration-duration-in-seconds=5

#自定义负载均衡规则
#eureka-client-article-consumer.ribbon.NFLoadBalancerRuleClassName=com.biancheng.irule.MyRule
#
## 禁用 Eureka
#ribbon.eureka.enabled=false
## 禁用 Eureka 后手动配置服务地址
#ribbon-config-demo.ribbon.listOfServers=localhost:8081,localhost:8083
## 请求连接的超时时间
#ribbon.ConnectTimeout=2000
## 请求处理的超时时间
#ribbon.ReadTimeout=5000
#
#也可以为每个Ribbon客户端设置不同的超时时间, 通过服务名称进行指定：
#ribbon-config-demo.ribbon.ConnectTimeout=2000
#ribbon-config-demo.ribbon.ReadTimeout=5000
#
## 最大连接数
#ribbon.MaxTotalConnections=500
## 每个host最大连接数
#ribbon.MaxConnectionsPerHost=500

#feign 使用 okhttp
feign.httpclient.enabled=false
feign.okhttp.enabled=true

#开启压缩可以有效节约网络资源，提升接口性能，我们可以配置 GZIP 来压缩数据：
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#配置压缩的类型、最小压缩值的标准
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048